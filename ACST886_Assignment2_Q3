---
title: "ACST886_Assignment2_Q3"
author: "Chieh Cheng"
date: "September 3, 2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

##Q3
###5.7  
```{r}
Age<-70:75
Ecx<-c(1000,1005,1010,1008,1006,998)
dx<-c(80,90,95,105,115,125)
mux<-dx/Ecx
#Objective function: -loglikelihood
OBJ<-function(para){
  -sum(log(exp(-Ecx*para[1]*para[2]^Age)*(Ecx*para[1]*para[2]^Age)^dx/factorial(dx)))
}
########################################################
#If use the score equation as objective functions, results are the same
#OBJ1<-function(para){
#  abs(sum(-Ecx*para[2]^Age + #dx/para[1]))+abs(sum(-Ecx*para[1]*Age*para[2]^(Age-1)+Age*dx/para[2]))
#}
#########################################################
#Find appropriate intial estimates for B & C:
mod_ini <- lm(log(mux)~Age,data = data.frame(mux,Age)) 
Ini_est <- c(exp(mod_ini$coefficients[1]),exp(mod_ini$coefficients[2])) 
MLE<-nlm(OBJ,Ini_est)$estimate
grad_mux<-MLE[1]*MLE[2]^Age
#plot
library(ggplot2)
ggplot()+
  geom_point(data=data.frame(Age,mux),mapping = aes(x=Age,y=mux))+
  geom_smooth(data=data.frame(Age,grad_mux),mapping = aes(x=Age,y=grad_mux))
```   

###5.8  
```{r}
Age <- 30:49
Ex <- c(70000,66672,68375,65420,61779,66091,68514,69560,65000,66279,67300,65368,65391,62917,66537,62302,62145,63856,61097,61110)
dx <- c(39,43,34,31,23,50,48,43,48,47,62,63,84,86,120,121,122,162,151,184)
qx <- dx/Ex
logit_qx <- log(qx/(1-qx))
OBJ <- function(para){
  sum(Ex*(logit_qx-(para[1]+para[2]*Age))^2)
}
Ini_est<-lm(logit_qx~Age,data = data.frame(Age,logit_qx))$coefficients
WLS<-nlm(OBJ,Ini_est,steptol = 10^-10)$estimate
grad_qx<-exp(WLS[1]+WLS[2]*Age)/(1+exp(WLS[1]+WLS[2]*Age))
#plot
library(ggplot2)
ggplot()+
  geom_point(data=data.frame(Age,qx),mapping = aes(x=Age,y=qx))+
  geom_point(data=data.frame(Age,grad_qx),mapping = aes(x=Age,y=grad_qx),color="red")+
  geom_smooth(data=data.frame(Age,grad_qx),mapping = aes(x=Age,y=grad_qx))
```  
  
###5.9
```{r}
Age <- 47:67
Ex <- c(166,187,218,243,276,302,347,390,430,494,558,628,701,813,917,1040,1182,1299,1432,1596,1752)
dx <- c(2,2,4,6,2,4,7,3,9,9,8,11,14,18,18,24,30,43,41,54,64)
qSx <- c(0.00505,0.0057,0.00644,0.00728,0.00826,0.0093,0.01051,0.01184,0.01331,0.01492,0.01668,0.01859,0.02065,0.02287,0.02525,0.02778,0.03049,0.03339,0.03648,0.03978,0.04332) 
qx <- dx/Ex
OBJ <- function(para){
  sum(Ex*(qx-(para[1]+para[2]*qSx))^2)
}
Ini_est<-lm(qx~qSx,data = data.frame(qx,qSx))$coefficients
WLS<-nlm(OBJ,Ini_est)$estimate
grad_qx<-WLS[1] + WLS[2] * qSx 
#plot 
library(ggplot2)
ggplot()+
  geom_point(data=data.frame(Age,qx),mapping = aes(x=Age,y=qx))+
  geom_point(data=data.frame(Age,grad_qx),mapping = aes(x=Age,y=grad_qx),color="red")+
  geom_smooth(data=data.frame(Age,grad_qx),mapping = aes(x=Age,y=grad_qx))
```  
  
__Conclusion__:   
After adjusting the steptol parameter in nlm(), 5.8 and 5.9 results are the same as the solutions on ilearn.   
However in 5.7, the non linear estimation doesn't achieve the better answer as solution provided. (I've even other optimization function in R such as nlminb() & optim(), as well as adjusting the steptol and stepmax parameter in those functions).  
  
The reason might be the complexity of our objective function. Even in Excel file, the answer provided isn't the optimal one if we find that the first score function isn't close to 0.  
  
However the graph we obtained is almost overlapped with the one in the solution file. Hence, I will say the linear regression estimates are appropriate in this case. 



